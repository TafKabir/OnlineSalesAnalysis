# -*- coding: utf-8 -*-
"""Online Sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MZKbQvauxy9Mxy3fFXn9mh06SBt1GYfH
"""

# Reference to data source
# Kaggle: shreanshverma27
# Title: Online Sales Dataset - Popular Marketplace Data
# URL: https://www.kaggle.com/datasets/shreyanshverma27/online-sales-dataset-popular-marketplace-data

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Loading the dataset
df = pd.read_csv('Online Sales Data.csv')

# Convert 'Date' column to datetime format to extract month
df['Date'] = pd.to_datetime(df['Date'])

# 1. Analyze sales trends over time to identify seasonal patterns or growth opportunities
def analyze_sales_trends(df):
    df['Month'] = df['Date'].dt.to_period('M')
    monthly_sales = df.groupby('Month')['Total Revenue'].sum().reset_index()

    plt.figure(figsize=(12, 6))
    plt.plot(monthly_sales['Month'].astype(str), monthly_sales['Total Revenue'], marker='o')
    plt.xticks(rotation=90)
    plt.title('Monthly Sales Trends')
    plt.xlabel('Month')
    plt.ylabel('Total Sales Revenue')
    plt.tight_layout()
    plt.show()

analyze_sales_trends(df)

# 2. Explore the popularity of different product categories across regions
def popularity_of_categories(df):
    category_region_sales = df.groupby(['Product Category', 'Region'])['Total Revenue'].sum().unstack().fillna(0)

    category_region_sales.plot(kind='bar', stacked=True, figsize=(12, 6))
    plt.title('Popularity of Product Categories Across Regions')
    plt.xlabel('Product Category')
    plt.ylabel('Total Sales Revenue')
    plt.legend(title='Region')
    plt.tight_layout()
    plt.show()

popularity_of_categories(df)

# 3. Investigate the impact of payment methods on sales volume or revenue
def payment_method_impact(df):
    payment_sales = df.groupby('Payment Method')['Total Revenue'].sum().reset_index()

    plt.figure(figsize=(10, 6))
    sns.barplot(data=payment_sales, x='Payment Method', y='Total Revenue')
    plt.title('Impact of Payment Methods on Sales Revenue')
    plt.xlabel('Payment Method')
    plt.ylabel('Total Sales Revenue')
    plt.tight_layout()
    plt.show()

payment_method_impact(df)

# 4. Identify top-selling products within each category to optimize inventory and marketing strategies
def top_selling_products(df):
    top_products = df.groupby(['Product Category', 'Product Name'])['Total Revenue'].sum().reset_index()
    top_products = top_products.sort_values(['Product Category', 'Total Revenue'], ascending=[True, False])

    for category in top_products['Product Category'].unique():
        top_10_products = top_products[top_products['Product Category'] == category].head(10)
        plt.figure(figsize=(10, 6))
        sns.barplot(data=top_10_products, x='Total Revenue', y='Product Name')
        plt.title(f'Top 10 Selling Products in {category}')
        plt.xlabel('Total Sales Revenue')
        plt.ylabel('Product Name')
        plt.tight_layout()
        plt.show()

top_selling_products(df)

# 5. Evaluate the performance of specific products or categories in different regions to tailor marketing campaigns accordingly
def performance_by_region(df):
    category_region_performance = df.groupby(['Product Category', 'Region'])['Total Revenue'].sum().reset_index()

    g = sns.catplot(data=category_region_performance, x='Region', y='Total Revenue', hue='Product Category', kind='bar', height=6, aspect=2)
    #g.set_xticklabels(rotation=90)
    g.legend.set_bbox_to_anchor([1, 1])
    g.set_titles('Performance of Categories in Different Regions')
    g.set_axis_labels('Region', 'Total Sales Revenue')
    plt.tight_layout()
    plt.show()

performance_by_region(df)